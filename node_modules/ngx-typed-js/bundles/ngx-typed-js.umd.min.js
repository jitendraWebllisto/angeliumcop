!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("typed.js")):"function"==typeof define&&define.amd?define("ngx-typed-js",["exports","@angular/core","typed.js"],e):e((t=t||self)["ngx-typed-js"]={},t.ng.core,t.Typed)}(this,function(t,e,n){"use strict";n=n&&n.hasOwnProperty("default")?n["default"]:n;var p=function(){function t(){this.completed=new e.EventEmitter,this.preStringTyped=new e.EventEmitter,this.stringTyped=new e.EventEmitter,this.lastStringBackspaced=new e.EventEmitter,this.typingPaused=new e.EventEmitter,this.typingResumed=new e.EventEmitter,this.reset=new e.EventEmitter,this.stopped=new e.EventEmitter,this.started=new e.EventEmitter,this.destroyed=new e.EventEmitter}return t.prototype.ngOnInit=function(){this.typed=new n(this.content.nativeElement.querySelector(".typing"),this.options)},t.prototype.ngAfterViewInit=function(){!1!==this.showCursor&&this.updateCursorStyle()},t.prototype.toggle=function(){this.typed.toggle()},t.prototype.stop=function(){this.typed.stop()},t.prototype.start=function(){this.typed.start()},t.prototype.destroy=function(){this.typed.destroy()},t.prototype.doReset=function(t){this.typed.reset(t)},Object.defineProperty(t.prototype,"options",{get:function(){var t=function(t){return function(){return t.emit()}},e=function(t){return function(e){return t.emit(e)}},n={strings:this.strings,stringsElement:this.stringsElement,typeSpeed:this.typeSpeed,startDelay:this.startDelay,backSpeed:this.backSpeed,smartBackspace:this.smartBackspace,shuffle:this.shuffle,backDelay:this.backDelay,fadeOut:this.fadeOut,fadeOutClass:this.fadeOutClass,fadeOutDelay:this.fadeOutDelay,loop:this.loop,loopCount:this.loopCount,showCursor:this.showCursor,autoInsertCss:this.autoInsertCss,attr:this.attr,bindInputFocusEvents:this.bindInputFocusEvents,contentType:this.contentType,onComplete:t(this.completed),preStringTyped:e(this.preStringTyped),onStringTyped:e(this.stringTyped),onLastStringBackspaced:t(this.lastStringBackspaced),onTypingPaused:e(this.typingPaused),onTypingResumed:e(this.typingResumed),onReset:t(this.reset),onStop:e(this.stopped),onStart:e(this.started),onDestroy:t(this.destroyed)};return Object.keys(n).forEach(function(t){n[t]===undefined&&delete n[t]}),n},enumerable:!0,configurable:!0}),t.prototype.updateCursorStyle=function(){var t=getComputedStyle(this.content.nativeElement.querySelector(".typing")),e=this.content.nativeElement.querySelector(".typed-cursor").style;e.fontSize=t.fontSize,e.color=this.cursorColor||t.color},t.decorators=[{type:e.Component,args:[{selector:"ngx-typed-js",template:"<div #wrapper>\n  <ng-content></ng-content>\n</div>\n",styles:[":host>>>.typing{display:inline}"]}]}],t.propDecorators={cursorColor:[{type:e.Input}],strings:[{type:e.Input}],stringsElement:[{type:e.Input}],typeSpeed:[{type:e.Input}],startDelay:[{type:e.Input}],backSpeed:[{type:e.Input}],smartBackspace:[{type:e.Input}],shuffle:[{type:e.Input}],backDelay:[{type:e.Input}],fadeOut:[{type:e.Input}],fadeOutClass:[{type:e.Input}],fadeOutDelay:[{type:e.Input}],loop:[{type:e.Input}],loopCount:[{type:e.Input}],showCursor:[{type:e.Input}],cursorChar:[{type:e.Input}],autoInsertCss:[{type:e.Input}],attr:[{type:e.Input}],bindInputFocusEvents:[{type:e.Input}],contentType:[{type:e.Input}],completed:[{type:e.Output}],preStringTyped:[{type:e.Output}],stringTyped:[{type:e.Output}],lastStringBackspaced:[{type:e.Output}],typingPaused:[{type:e.Output}],typingResumed:[{type:e.Output}],reset:[{type:e.Output}],stopped:[{type:e.Output}],started:[{type:e.Output}],destroyed:[{type:e.Output}],content:[{type:e.ViewChild,args:["wrapper"]}]},t}(),s=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{declarations:[p],imports:[],exports:[p]}]}],t}();t.NgxTypedJsModule=s,t.Éµa=p,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-typed-js.umd.min.js.map