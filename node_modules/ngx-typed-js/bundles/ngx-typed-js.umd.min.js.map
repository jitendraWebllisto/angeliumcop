{"version":3,"sources":["ng://ngx-typed-js/lib/ngx-typed-js.component.ts","ng://ngx-typed-js/lib/ngx-typed-js.module.ts"],"names":["NgxTypedJsComponent","this","completed","EventEmitter","preStringTyped","stringTyped","lastStringBackspaced","typingPaused","typingResumed","reset","stopped","started","destroyed","prototype","ngOnInit","typed","Typed","content","nativeElement","querySelector","options","ngAfterViewInit","showCursor","updateCursorStyle","toggle","stop","start","destroy","doReset","restart","Object","defineProperty","emit","emitter","emitIndex","index","opts","strings","stringsElement","typeSpeed","startDelay","backSpeed","smartBackspace","shuffle","backDelay","fadeOut","fadeOutClass","fadeOutDelay","loop","loopCount","autoInsertCss","attr","bindInputFocusEvents","contentType","onComplete","onStringTyped","onLastStringBackspaced","onTypingPaused","onTypingResumed","onReset","onStop","onStart","onDestroy","keys","forEach","key","undefined","textElementStyle","getComputedStyle","cursorElementStyle","style","fontSize","color","cursorColor","Component","args","selector","template","Input","Output","ViewChild","NgxTypedJsModule","NgModule","declarations","imports","exports"],"mappings":"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","sourcesContent":["import {AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport Typed, {TypedOptions} from 'typed.js';\n\n@Component({\n  selector: 'ngx-typed-js',\n  templateUrl: 'ngx-typed-js.component.html',\n  styleUrls: ['ngx-typed-js.component.css']\n})\nexport class NgxTypedJsComponent implements OnInit, AfterViewInit {\n  @Input() private cursorColor?: string;\n\n  @Input() private strings?: string[];\n  @Input() private stringsElement?: string;\n  @Input() private typeSpeed?: number;\n  @Input() private startDelay?: number;\n  @Input() private backSpeed?: number;\n  @Input() private smartBackspace?: boolean;\n  @Input() private shuffle?: boolean;\n  @Input() private backDelay?: number;\n  @Input() private fadeOut?: boolean;\n  @Input() private fadeOutClass?: string;\n  @Input() private fadeOutDelay?: boolean;\n  @Input() private loop?: boolean;\n  @Input() private loopCount?: number;\n  @Input() private showCursor?: boolean;\n  @Input() private cursorChar?: string;\n  @Input() private autoInsertCss?: boolean;\n  @Input() private attr?: string;\n  @Input() private bindInputFocusEvents?: boolean;\n  @Input() private contentType?: string;\n\n  @Output() private completed: EventEmitter<void> = new EventEmitter<void>();\n  @Output() private preStringTyped: EventEmitter<number> = new EventEmitter<number>();\n  @Output() private stringTyped: EventEmitter<number> = new EventEmitter<number>();\n  @Output() private lastStringBackspaced: EventEmitter<void> = new EventEmitter<void>();\n  @Output() private typingPaused: EventEmitter<number> = new EventEmitter<number>();\n  @Output() private typingResumed: EventEmitter<number> = new EventEmitter<number>();\n  @Output() private reset: EventEmitter<void> = new EventEmitter<void>();\n  @Output() private stopped: EventEmitter<number> = new EventEmitter<number>();\n  @Output() private started: EventEmitter<number> = new EventEmitter<number>();\n  @Output() private destroyed: EventEmitter<void> = new EventEmitter<void>();\n\n  private typed: Typed;\n  @ViewChild('wrapper') private content;\n\n  ngOnInit() {\n    this.typed = new Typed(\n      this.content.nativeElement.querySelector('.typing'),\n      this.options,\n    );\n  }\n\n  ngAfterViewInit(): void {\n    if (this.showCursor !== false) {\n      this.updateCursorStyle();\n    }\n  }\n\n  public toggle(): void {\n    this.typed.toggle();\n  }\n\n  public stop(): void {\n    this.typed.stop();\n  }\n\n  public start(): void {\n    this.typed.start();\n  }\n\n  public destroy(): void {\n    this.typed.destroy();\n  }\n\n  public doReset(restart?: boolean): void {\n    this.typed.reset(restart);\n  }\n\n  private get options(): TypedOptions {\n    const emit: (emitter: EventEmitter<void>) => (self: Typed) => void\n      = (emitter: EventEmitter<void>) => () => emitter.emit();\n\n    const emitIndex: (emitter: EventEmitter<number>) => (index: number, self: Typed) => void\n      = (emitter: EventEmitter<number>) => (index: number) => emitter.emit(index);\n\n    const opts = {\n      strings: this.strings,\n      stringsElement: this.stringsElement,\n      typeSpeed: this.typeSpeed,\n      startDelay: this.startDelay,\n      backSpeed: this.backSpeed,\n      smartBackspace: this.smartBackspace,\n      shuffle: this.shuffle,\n      backDelay: this.backDelay,\n      fadeOut: this.fadeOut,\n      fadeOutClass: this.fadeOutClass,\n      fadeOutDelay: this.fadeOutDelay,\n      loop: this.loop,\n      loopCount: this.loopCount,\n      showCursor: this.showCursor,\n      autoInsertCss: this.autoInsertCss,\n      attr: this.attr,\n      bindInputFocusEvents: this.bindInputFocusEvents,\n      contentType: this.contentType,\n      onComplete: emit(this.completed),\n      preStringTyped: emitIndex(this.preStringTyped),\n      onStringTyped: emitIndex(this.stringTyped),\n      onLastStringBackspaced: emit(this.lastStringBackspaced),\n      onTypingPaused: emitIndex(this.typingPaused),\n      onTypingResumed: emitIndex(this.typingResumed),\n      onReset: emit(this.reset),\n      onStop: emitIndex(this.stopped),\n      onStart: emitIndex(this.started),\n      onDestroy: emit(this.destroyed),\n    } as TypedOptions;\n\n    Object.keys(opts).forEach(key => {\n      if (opts[key] === undefined) {\n        delete opts[key];\n      }\n    });\n\n    return opts;\n  }\n\n  private updateCursorStyle(): void {\n    const textElementStyle = getComputedStyle(this.content.nativeElement.querySelector('.typing'));\n    const cursorElementStyle = this.content.nativeElement.querySelector('.typed-cursor').style;\n\n    cursorElementStyle.fontSize = textElementStyle.fontSize;\n    cursorElementStyle.color = this.cursorColor || textElementStyle.color;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NgxTypedJsComponent} from './ngx-typed-js.component';\n\n@NgModule({\n  declarations: [NgxTypedJsComponent],\n  imports: [],\n  exports: [NgxTypedJsComponent]\n})\nexport class NgxTypedJsModule {\n}\n"]}